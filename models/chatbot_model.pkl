import os
import pandas as pd
import numpy as np
import pickle
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import MultinomialNB
from sklearn.pipeline import make_pipeline
from sklearn.metrics import accuracy_score, classification_report

# Define the model path
MODEL_PATH = "model/trained_model.pkl"

# Load dataset
df = pd.read_csv("intents.csv")  

# Drop missing values
df.dropna(inplace=True)

# Split data into text and intent
X = df["text"]
y = df["intent"]

# Train-test split (80% training, 20% testing)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create a pipeline: TF-IDF + Naive Bayes Classifier
model = make_pipeline(TfidfVectorizer(), MultinomialNB())

# Train the model
model.fit(X_train, y_train)

# Predict on test data
y_pred = model.predict(X_test)

# Check model accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy:.2f}")

# Display classification report
print(classification_report(y_test, y_pred))

# Save the trained model
os.makedirs("model", exist_ok=True)
with open(MODEL_PATH, "wb") as file:
    pickle.dump(model, file)

print("Model saved successfully!")


# Function to predict intent
def predict_intent(user_input):
    with open(MODEL_PATH, "rb") as file:
        loaded_model = pickle.load(file)
    prediction = loaded_model.predict([user_input])[0]
    return f"Predicted Intent: {prediction}"

# Example chatbot input
if __name__ == "__main__":
    user_message = "Can you recommend a movie?"
    print(predict_intent(user_message))
